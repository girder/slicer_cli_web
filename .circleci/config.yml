version: 2.1

executors:
  toxandnode:
    working_directory: ~/project
    docker:
      - image: girder/tox-and-node
      - image: mongo:4.0
        command: bash -c "mkdir /dev/shm/mongo && mongod --nojournal --dbpath=/dev/shm/mongo --noauth --bind_ip_all"
      - image: rabbitmq
commands:
  tox:
    description: "Run tox"
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Preinstall phantomjs to work around an npm permission issue
          command: npm install -g phantomjs-prebuilt --unsafe-perm
      - run:
          name: Run tests via tox
          # Piping through cat does less buffering of the output but can
          # consume the exit code
          command: |
            node --version
            npm --version
            export NVM_DIR="/opt/circleci/.nvm"
            source $NVM_DIR/nvm.sh
            nvm install v14
            nvm alias default v14
            node --version
            npm --version
            tox -e << parameters.env >> | cat; test ${PIPESTATUS[0]} -eq 0
  upgradepython:
    description: "Upgrade python"
    parameters:
      version:
        type: string
    steps:
      - run:
          name: Upgrade pyenv
          command: |
            sudo rm -rf /opt/circleci/.pyenv
            curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
            pyenv install --list list
      - run:
          name: Use pyenv to install python
          command: |
            pyenv install << parameters.version >>
  allservices:
    description: "Switch to a python version and start other services"
    parameters:
      version:
        type: string
    steps:
      - upgradepython:
          version: << parameters.version >>
      - run:
          name: Use pyenv to set python version
          command: |
            pyenv versions
            pyenv global << parameters.version >>
      - run:
          name: start mongo
          command: |
            docker run --rm -d -p 27017:27017 mongo:4.0 bash -c "mkdir /dev/shm/mongo && mongod --nojournal --dbpath=/dev/shm/mongo --noauth --bind_ip_all"
      - run:
          name: start rabbitmq
          command: |
            docker run --rm -d -p 5672:5672 rabbitmq
      - run:
          name: install nodejs
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            source $NVM_DIR/nvm.sh
            nvm install v14
            nvm alias default v14
      - run:
          name: Upgrade pip
          command: pip install -U pip
      - run:
          name: Upgrade virtualenv and tox
          command: pip install -U virtualenv tox
  coverage:
    description: "Upload coverage"
    steps:
      - run:
          name: Install Codecov client
          command: |
              curl -Os https://uploader.codecov.io/latest/linux/codecov
              chmod +x codecov
      - run:
          name: Upload coverage
          # Retry as codecov can be flaky
          command: for i in $(seq 1 10); do [ $i -gt 1 ] && echo "retrying $i" && sleep 5; ./codecov --required --disable search pycov gcov --root project --file .tox/coverage/py_coverage.xml,.tox/coverage/cobertura-coverage.xml && s=0 && break || s=$?; done; (exit $s)

jobs:
  py38:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - allservices:
          version: "3.8"
      - tox:
          env: py38
      - coverage
  py39:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - allservices:
          version: "3.9"
      - tox:
          env: py39
      - coverage
  py310:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - allservices:
          version: "3.10"
      - tox:
          env: py310
      - coverage
  py311:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - allservices:
          version: "3.11"
      - tox:
          env: py311
      - coverage
  py312:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - allservices:
          version: "3.12"
      - tox:
          env: py312
      - coverage
  small-docker:
    machine:
        image: ubuntu-2004:202111-02
    steps:
      - checkout
      - run:
          name: Build the small docker
          command: |
            cd small-docker
            docker build --force-rm -t girder/slicer_cli_web:small .
      - run:
          name: Publish the images to Docker Hub
          command: |
              echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
              docker push girder/slicer_cli_web:small
  example-average-color:
    machine:
        image: ubuntu-2004:202111-02
    steps:
      - checkout
      - run:
          name: Build the example-average-color docker
          command: |
            cd example-average-color
            docker build --force-rm -t girder/slicer_cli_web:example-average-color .
      - run:
          name: Publish the images to Docker Hub
          command: |
              echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
              docker push girder/slicer_cli_web:example-average-color
  lint_and_docs:
    executor: toxandnode
    steps:
      - checkout
      - run:
          name: Run tox
          command: |
            tox -e flake8,lintclient | cat; test ${PIPESTATUS[0]} -eq 0
  release:
    docker:
      - image: girder/tox-and-node
    steps:
      - checkout
      - deploy:
          name: Run tests via tox
          # Piping through cat does less buffering of the output but can
          # consume the exit code
          command: PYTEST_ADDOPTS=--forked tox -e release | cat; test ${PIPESTATUS[0]} -eq 0

workflows:
  version: 2
  ci:
    jobs:
      - py38:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py39:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py310:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py311:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py312:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - lint_and_docs:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - small-docker:
          filters:
            branches:
              only:
                - master
                # Create a branch of this name to push to docker hub
                - small-docker
      - example-average-color:
          filters:
            branches:
              only:
                - master
                # Create a branch of this name to push to docker hub
                - example-average-color
      - release:
          requires:
            - py38
            - py39
            - py310
            - py311
            - py312
            - lint_and_docs
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
